void apply_rules(SensorData &current) {
    DateTime now = rtc.now();
    int currentMinutes = now.hour() * 60 + now.minute();
    unsigned long nowMillis = millis();

    const unsigned long STALE_THRESHOLD = 60000;  // 60 sec

    bool airTempFresh = (nowMillis - current.lastUpdatedAirTemp) < STALE_THRESHOLD;
    bool humidityFresh = (nowMillis - current.lastUpdatedHumidity) < STALE_THRESHOLD;
    bool waterTempFresh = (nowMillis - current.lastUpdatedWaterTemp) < STALE_THRESHOLD;

    if (airTempFresh && humidityFresh) {
        check_climate_and_control_fan(current.airTemp, current.airHumidity, currentMinutes);
    } else {
        control_fan(false); // fail-safe: turn off fan
        Serial.println("⚠️ Skipping fan logic — air data stale");
    }

    if (waterTempFresh) {
        check_and_control_pump(now, current.waterTemp);
    } else {
        control_pump(false); // fail-safe: pump off
        Serial.println("⚠️ Skipping pump logic — water temp stale");
    }

    check_and_control_light(now); // not sensor-dependent
}

And in your ESP-NOW onReceive handler:
When a new RealTimeData packet arrives from the sensor node, update the timestamp for each field:

if (!isnan(packet.airTemp)) {
    current.airTemp = packet.airTemp;
    current.lastUpdatedAirTemp = millis();
}
if (!isnan(packet.airHumidity)) {
    current.airHumidity = packet.airHumidity;
    current.lastUpdatedHumidity = millis();
}
if (!isnan(packet.waterTemp)) {
    current.waterTemp = packet.waterTemp;
    current.lastUpdatedWaterTemp = millis();
}
